// Code generated by ent, DO NOT EDIT.

package campaign

import (
	"nlypage-final/internal/adapters/database/postgres/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldID, id))
}

// AdvertiserID applies equality check predicate on the "advertiser_id" field. It's identical to AdvertiserIDEQ.
func AdvertiserID(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdvertiserID, v))
}

// ImpressionsLimit applies equality check predicate on the "impressions_limit" field. It's identical to ImpressionsLimitEQ.
func ImpressionsLimit(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldImpressionsLimit, v))
}

// ClicksLimit applies equality check predicate on the "clicks_limit" field. It's identical to ClicksLimitEQ.
func ClicksLimit(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldClicksLimit, v))
}

// CostPerImpression applies equality check predicate on the "cost_per_impression" field. It's identical to CostPerImpressionEQ.
func CostPerImpression(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldCostPerImpression, v))
}

// CostPerClick applies equality check predicate on the "cost_per_click" field. It's identical to CostPerClickEQ.
func CostPerClick(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldCostPerClick, v))
}

// AdTitle applies equality check predicate on the "ad_title" field. It's identical to AdTitleEQ.
func AdTitle(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdTitle, v))
}

// AdText applies equality check predicate on the "ad_text" field. It's identical to AdTextEQ.
func AdText(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdText, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldImageURL, v))
}

// StartDate applies equality check predicate on the "start_date" field. It's identical to StartDateEQ.
func StartDate(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldStartDate, v))
}

// EndDate applies equality check predicate on the "end_date" field. It's identical to EndDateEQ.
func EndDate(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldEndDate, v))
}

// Moderated applies equality check predicate on the "moderated" field. It's identical to ModeratedEQ.
func Moderated(v bool) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldModerated, v))
}

// AdvertiserIDEQ applies the EQ predicate on the "advertiser_id" field.
func AdvertiserIDEQ(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdvertiserID, v))
}

// AdvertiserIDNEQ applies the NEQ predicate on the "advertiser_id" field.
func AdvertiserIDNEQ(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldAdvertiserID, v))
}

// AdvertiserIDIn applies the In predicate on the "advertiser_id" field.
func AdvertiserIDIn(vs ...uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldAdvertiserID, vs...))
}

// AdvertiserIDNotIn applies the NotIn predicate on the "advertiser_id" field.
func AdvertiserIDNotIn(vs ...uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldAdvertiserID, vs...))
}

// AdvertiserIDGT applies the GT predicate on the "advertiser_id" field.
func AdvertiserIDGT(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldAdvertiserID, v))
}

// AdvertiserIDGTE applies the GTE predicate on the "advertiser_id" field.
func AdvertiserIDGTE(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldAdvertiserID, v))
}

// AdvertiserIDLT applies the LT predicate on the "advertiser_id" field.
func AdvertiserIDLT(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldAdvertiserID, v))
}

// AdvertiserIDLTE applies the LTE predicate on the "advertiser_id" field.
func AdvertiserIDLTE(v uuid.UUID) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldAdvertiserID, v))
}

// ImpressionsLimitEQ applies the EQ predicate on the "impressions_limit" field.
func ImpressionsLimitEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldImpressionsLimit, v))
}

// ImpressionsLimitNEQ applies the NEQ predicate on the "impressions_limit" field.
func ImpressionsLimitNEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldImpressionsLimit, v))
}

// ImpressionsLimitIn applies the In predicate on the "impressions_limit" field.
func ImpressionsLimitIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldImpressionsLimit, vs...))
}

// ImpressionsLimitNotIn applies the NotIn predicate on the "impressions_limit" field.
func ImpressionsLimitNotIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldImpressionsLimit, vs...))
}

// ImpressionsLimitGT applies the GT predicate on the "impressions_limit" field.
func ImpressionsLimitGT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldImpressionsLimit, v))
}

// ImpressionsLimitGTE applies the GTE predicate on the "impressions_limit" field.
func ImpressionsLimitGTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldImpressionsLimit, v))
}

// ImpressionsLimitLT applies the LT predicate on the "impressions_limit" field.
func ImpressionsLimitLT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldImpressionsLimit, v))
}

// ImpressionsLimitLTE applies the LTE predicate on the "impressions_limit" field.
func ImpressionsLimitLTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldImpressionsLimit, v))
}

// ClicksLimitEQ applies the EQ predicate on the "clicks_limit" field.
func ClicksLimitEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldClicksLimit, v))
}

// ClicksLimitNEQ applies the NEQ predicate on the "clicks_limit" field.
func ClicksLimitNEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldClicksLimit, v))
}

// ClicksLimitIn applies the In predicate on the "clicks_limit" field.
func ClicksLimitIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldClicksLimit, vs...))
}

// ClicksLimitNotIn applies the NotIn predicate on the "clicks_limit" field.
func ClicksLimitNotIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldClicksLimit, vs...))
}

// ClicksLimitGT applies the GT predicate on the "clicks_limit" field.
func ClicksLimitGT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldClicksLimit, v))
}

// ClicksLimitGTE applies the GTE predicate on the "clicks_limit" field.
func ClicksLimitGTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldClicksLimit, v))
}

// ClicksLimitLT applies the LT predicate on the "clicks_limit" field.
func ClicksLimitLT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldClicksLimit, v))
}

// ClicksLimitLTE applies the LTE predicate on the "clicks_limit" field.
func ClicksLimitLTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldClicksLimit, v))
}

// CostPerImpressionEQ applies the EQ predicate on the "cost_per_impression" field.
func CostPerImpressionEQ(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldCostPerImpression, v))
}

// CostPerImpressionNEQ applies the NEQ predicate on the "cost_per_impression" field.
func CostPerImpressionNEQ(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldCostPerImpression, v))
}

// CostPerImpressionIn applies the In predicate on the "cost_per_impression" field.
func CostPerImpressionIn(vs ...float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldCostPerImpression, vs...))
}

// CostPerImpressionNotIn applies the NotIn predicate on the "cost_per_impression" field.
func CostPerImpressionNotIn(vs ...float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldCostPerImpression, vs...))
}

// CostPerImpressionGT applies the GT predicate on the "cost_per_impression" field.
func CostPerImpressionGT(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldCostPerImpression, v))
}

// CostPerImpressionGTE applies the GTE predicate on the "cost_per_impression" field.
func CostPerImpressionGTE(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldCostPerImpression, v))
}

// CostPerImpressionLT applies the LT predicate on the "cost_per_impression" field.
func CostPerImpressionLT(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldCostPerImpression, v))
}

// CostPerImpressionLTE applies the LTE predicate on the "cost_per_impression" field.
func CostPerImpressionLTE(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldCostPerImpression, v))
}

// CostPerClickEQ applies the EQ predicate on the "cost_per_click" field.
func CostPerClickEQ(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldCostPerClick, v))
}

// CostPerClickNEQ applies the NEQ predicate on the "cost_per_click" field.
func CostPerClickNEQ(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldCostPerClick, v))
}

// CostPerClickIn applies the In predicate on the "cost_per_click" field.
func CostPerClickIn(vs ...float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldCostPerClick, vs...))
}

// CostPerClickNotIn applies the NotIn predicate on the "cost_per_click" field.
func CostPerClickNotIn(vs ...float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldCostPerClick, vs...))
}

// CostPerClickGT applies the GT predicate on the "cost_per_click" field.
func CostPerClickGT(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldCostPerClick, v))
}

// CostPerClickGTE applies the GTE predicate on the "cost_per_click" field.
func CostPerClickGTE(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldCostPerClick, v))
}

// CostPerClickLT applies the LT predicate on the "cost_per_click" field.
func CostPerClickLT(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldCostPerClick, v))
}

// CostPerClickLTE applies the LTE predicate on the "cost_per_click" field.
func CostPerClickLTE(v float64) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldCostPerClick, v))
}

// AdTitleEQ applies the EQ predicate on the "ad_title" field.
func AdTitleEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdTitle, v))
}

// AdTitleNEQ applies the NEQ predicate on the "ad_title" field.
func AdTitleNEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldAdTitle, v))
}

// AdTitleIn applies the In predicate on the "ad_title" field.
func AdTitleIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldAdTitle, vs...))
}

// AdTitleNotIn applies the NotIn predicate on the "ad_title" field.
func AdTitleNotIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldAdTitle, vs...))
}

// AdTitleGT applies the GT predicate on the "ad_title" field.
func AdTitleGT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldAdTitle, v))
}

// AdTitleGTE applies the GTE predicate on the "ad_title" field.
func AdTitleGTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldAdTitle, v))
}

// AdTitleLT applies the LT predicate on the "ad_title" field.
func AdTitleLT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldAdTitle, v))
}

// AdTitleLTE applies the LTE predicate on the "ad_title" field.
func AdTitleLTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldAdTitle, v))
}

// AdTitleContains applies the Contains predicate on the "ad_title" field.
func AdTitleContains(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContains(FieldAdTitle, v))
}

// AdTitleHasPrefix applies the HasPrefix predicate on the "ad_title" field.
func AdTitleHasPrefix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasPrefix(FieldAdTitle, v))
}

// AdTitleHasSuffix applies the HasSuffix predicate on the "ad_title" field.
func AdTitleHasSuffix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasSuffix(FieldAdTitle, v))
}

// AdTitleEqualFold applies the EqualFold predicate on the "ad_title" field.
func AdTitleEqualFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEqualFold(FieldAdTitle, v))
}

// AdTitleContainsFold applies the ContainsFold predicate on the "ad_title" field.
func AdTitleContainsFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContainsFold(FieldAdTitle, v))
}

// AdTextEQ applies the EQ predicate on the "ad_text" field.
func AdTextEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldAdText, v))
}

// AdTextNEQ applies the NEQ predicate on the "ad_text" field.
func AdTextNEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldAdText, v))
}

// AdTextIn applies the In predicate on the "ad_text" field.
func AdTextIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldAdText, vs...))
}

// AdTextNotIn applies the NotIn predicate on the "ad_text" field.
func AdTextNotIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldAdText, vs...))
}

// AdTextGT applies the GT predicate on the "ad_text" field.
func AdTextGT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldAdText, v))
}

// AdTextGTE applies the GTE predicate on the "ad_text" field.
func AdTextGTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldAdText, v))
}

// AdTextLT applies the LT predicate on the "ad_text" field.
func AdTextLT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldAdText, v))
}

// AdTextLTE applies the LTE predicate on the "ad_text" field.
func AdTextLTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldAdText, v))
}

// AdTextContains applies the Contains predicate on the "ad_text" field.
func AdTextContains(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContains(FieldAdText, v))
}

// AdTextHasPrefix applies the HasPrefix predicate on the "ad_text" field.
func AdTextHasPrefix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasPrefix(FieldAdText, v))
}

// AdTextHasSuffix applies the HasSuffix predicate on the "ad_text" field.
func AdTextHasSuffix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasSuffix(FieldAdText, v))
}

// AdTextEqualFold applies the EqualFold predicate on the "ad_text" field.
func AdTextEqualFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEqualFold(FieldAdText, v))
}

// AdTextContainsFold applies the ContainsFold predicate on the "ad_text" field.
func AdTextContainsFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContainsFold(FieldAdText, v))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLIsNil applies the IsNil predicate on the "image_url" field.
func ImageURLIsNil() predicate.Campaign {
	return predicate.Campaign(sql.FieldIsNull(FieldImageURL))
}

// ImageURLNotNil applies the NotNil predicate on the "image_url" field.
func ImageURLNotNil() predicate.Campaign {
	return predicate.Campaign(sql.FieldNotNull(FieldImageURL))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.Campaign {
	return predicate.Campaign(sql.FieldContainsFold(FieldImageURL, v))
}

// StartDateEQ applies the EQ predicate on the "start_date" field.
func StartDateEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldStartDate, v))
}

// StartDateNEQ applies the NEQ predicate on the "start_date" field.
func StartDateNEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldStartDate, v))
}

// StartDateIn applies the In predicate on the "start_date" field.
func StartDateIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldStartDate, vs...))
}

// StartDateNotIn applies the NotIn predicate on the "start_date" field.
func StartDateNotIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldStartDate, vs...))
}

// StartDateGT applies the GT predicate on the "start_date" field.
func StartDateGT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldStartDate, v))
}

// StartDateGTE applies the GTE predicate on the "start_date" field.
func StartDateGTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldStartDate, v))
}

// StartDateLT applies the LT predicate on the "start_date" field.
func StartDateLT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldStartDate, v))
}

// StartDateLTE applies the LTE predicate on the "start_date" field.
func StartDateLTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldStartDate, v))
}

// EndDateEQ applies the EQ predicate on the "end_date" field.
func EndDateEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldEndDate, v))
}

// EndDateNEQ applies the NEQ predicate on the "end_date" field.
func EndDateNEQ(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldEndDate, v))
}

// EndDateIn applies the In predicate on the "end_date" field.
func EndDateIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldIn(FieldEndDate, vs...))
}

// EndDateNotIn applies the NotIn predicate on the "end_date" field.
func EndDateNotIn(vs ...int) predicate.Campaign {
	return predicate.Campaign(sql.FieldNotIn(FieldEndDate, vs...))
}

// EndDateGT applies the GT predicate on the "end_date" field.
func EndDateGT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGT(FieldEndDate, v))
}

// EndDateGTE applies the GTE predicate on the "end_date" field.
func EndDateGTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldGTE(FieldEndDate, v))
}

// EndDateLT applies the LT predicate on the "end_date" field.
func EndDateLT(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLT(FieldEndDate, v))
}

// EndDateLTE applies the LTE predicate on the "end_date" field.
func EndDateLTE(v int) predicate.Campaign {
	return predicate.Campaign(sql.FieldLTE(FieldEndDate, v))
}

// ModeratedEQ applies the EQ predicate on the "moderated" field.
func ModeratedEQ(v bool) predicate.Campaign {
	return predicate.Campaign(sql.FieldEQ(FieldModerated, v))
}

// ModeratedNEQ applies the NEQ predicate on the "moderated" field.
func ModeratedNEQ(v bool) predicate.Campaign {
	return predicate.Campaign(sql.FieldNEQ(FieldModerated, v))
}

// HasTargeting applies the HasEdge predicate on the "targeting" edge.
func HasTargeting() predicate.Campaign {
	return predicate.Campaign(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, TargetingTable, TargetingColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTargetingWith applies the HasEdge predicate on the "targeting" edge with a given conditions (other predicates).
func HasTargetingWith(preds ...predicate.Targeting) predicate.Campaign {
	return predicate.Campaign(func(s *sql.Selector) {
		step := newTargetingStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Campaign) predicate.Campaign {
	return predicate.Campaign(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Campaign) predicate.Campaign {
	return predicate.Campaign(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Campaign) predicate.Campaign {
	return predicate.Campaign(sql.NotPredicates(p))
}

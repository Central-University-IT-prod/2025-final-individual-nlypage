// Code generated by ent, DO NOT EDIT.

package ent

import (
	"nlypage-final/internal/adapters/database/postgres/ent/advertiser"
	"nlypage-final/internal/adapters/database/postgres/ent/campaign"
	"nlypage-final/internal/adapters/database/postgres/ent/schema"
	"nlypage-final/internal/adapters/database/postgres/ent/user"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	advertiserFields := schema.Advertiser{}.Fields()
	_ = advertiserFields
	// advertiserDescName is the schema descriptor for name field.
	advertiserDescName := advertiserFields[1].Descriptor()
	// advertiser.NameValidator is a validator for the "name" field. It is called by the builders before save.
	advertiser.NameValidator = advertiserDescName.Validators[0].(func(string) error)
	// advertiserDescID is the schema descriptor for id field.
	advertiserDescID := advertiserFields[0].Descriptor()
	// advertiser.DefaultID holds the default value on creation for the id field.
	advertiser.DefaultID = advertiserDescID.Default.(func() uuid.UUID)
	campaignFields := schema.Campaign{}.Fields()
	_ = campaignFields
	// campaignDescImpressionsLimit is the schema descriptor for impressions_limit field.
	campaignDescImpressionsLimit := campaignFields[2].Descriptor()
	// campaign.ImpressionsLimitValidator is a validator for the "impressions_limit" field. It is called by the builders before save.
	campaign.ImpressionsLimitValidator = campaignDescImpressionsLimit.Validators[0].(func(int) error)
	// campaignDescClicksLimit is the schema descriptor for clicks_limit field.
	campaignDescClicksLimit := campaignFields[3].Descriptor()
	// campaign.ClicksLimitValidator is a validator for the "clicks_limit" field. It is called by the builders before save.
	campaign.ClicksLimitValidator = campaignDescClicksLimit.Validators[0].(func(int) error)
	// campaignDescAdTitle is the schema descriptor for ad_title field.
	campaignDescAdTitle := campaignFields[6].Descriptor()
	// campaign.AdTitleValidator is a validator for the "ad_title" field. It is called by the builders before save.
	campaign.AdTitleValidator = campaignDescAdTitle.Validators[0].(func(string) error)
	// campaignDescAdText is the schema descriptor for ad_text field.
	campaignDescAdText := campaignFields[7].Descriptor()
	// campaign.AdTextValidator is a validator for the "ad_text" field. It is called by the builders before save.
	campaign.AdTextValidator = campaignDescAdText.Validators[0].(func(string) error)
	// campaignDescStartDate is the schema descriptor for start_date field.
	campaignDescStartDate := campaignFields[9].Descriptor()
	// campaign.StartDateValidator is a validator for the "start_date" field. It is called by the builders before save.
	campaign.StartDateValidator = campaignDescStartDate.Validators[0].(func(int) error)
	// campaignDescEndDate is the schema descriptor for end_date field.
	campaignDescEndDate := campaignFields[10].Descriptor()
	// campaign.EndDateValidator is a validator for the "end_date" field. It is called by the builders before save.
	campaign.EndDateValidator = campaignDescEndDate.Validators[0].(func(int) error)
	// campaignDescID is the schema descriptor for id field.
	campaignDescID := campaignFields[0].Descriptor()
	// campaign.DefaultID holds the default value on creation for the id field.
	campaign.DefaultID = campaignDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[2].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}

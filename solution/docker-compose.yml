services:
  database:
    container_name: database
    ports:
      - '5432:5432'
    env_file:
      - .env
    image: postgres:16.2-alpine3.19
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - database:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: redis
    image: 'redis:latest'
    command: redis-server --requirepass ${REDIS_PASSWORD} --port 6380
    ports:
      - '6380:6380'
    volumes:
      - redis-data:/data
    restart: always
    healthcheck:
      test:
        [ 'CMD', 'redis-cli', '-p', '6380', '-a', '${REDIS_PASSWORD}', 'ping' ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DATABASE}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - '8123:8123'
      - '9000:9000'
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8123/ping',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    image: bitnami/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS}
    ports:
      - '9001:9001'
      - '9002:9000'
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9001/minio/health/ready' ]
      interval: 10s
      timeout: 20s
      retries: 3
      start_period: 10s

  backend:
    build: ./advertising
    container_name: backend
    restart: always
    env_file:
      - .env
    ports:
      - '8080:8080'
    volumes:
      - ./logs:/opt/logs
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      minio:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      clickhouse:
        condition: service_healthy

volumes:
  database:
  redis-data:
  clickhouse-data:
  minio_data:
  grafana-data:
